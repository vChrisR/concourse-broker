// This file was generated by counterfeiter
package buildsfakes

import (
	"sync"

	"github.com/concourse/atc/builds"
)

type FakeBuildTracker struct {
	TrackStub        func()
	trackMutex       sync.RWMutex
	trackArgsForCall []struct{}
	invocations      map[string][][]interface{}
	invocationsMutex sync.RWMutex
}

func (fake *FakeBuildTracker) Track() {
	fake.trackMutex.Lock()
	fake.trackArgsForCall = append(fake.trackArgsForCall, struct{}{})
	fake.recordInvocation("Track", []interface{}{})
	fake.trackMutex.Unlock()
	if fake.TrackStub != nil {
		fake.TrackStub()
	}
}

func (fake *FakeBuildTracker) TrackCallCount() int {
	fake.trackMutex.RLock()
	defer fake.trackMutex.RUnlock()
	return len(fake.trackArgsForCall)
}

func (fake *FakeBuildTracker) Invocations() map[string][][]interface{} {
	fake.invocationsMutex.RLock()
	defer fake.invocationsMutex.RUnlock()
	fake.trackMutex.RLock()
	defer fake.trackMutex.RUnlock()
	return fake.invocations
}

func (fake *FakeBuildTracker) recordInvocation(key string, args []interface{}) {
	fake.invocationsMutex.Lock()
	defer fake.invocationsMutex.Unlock()
	if fake.invocations == nil {
		fake.invocations = map[string][][]interface{}{}
	}
	if fake.invocations[key] == nil {
		fake.invocations[key] = [][]interface{}{}
	}
	fake.invocations[key] = append(fake.invocations[key], args)
}

var _ builds.BuildTracker = new(FakeBuildTracker)
